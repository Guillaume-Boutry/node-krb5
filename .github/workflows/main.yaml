# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # build-linux:
  #   # The type of runner that the job will run on
  #   name: "Ubuntu Latest"
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       linux_os: ["archlinux", "centos7", "ubuntu"]

  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - name: Print env
  #       run: |
  #         echo github.event.action: ${{ github.event.action }}
  #         echo github.event_name: ${{ github.event_name }}
    
  #     - name: Build and run tests on linux
  #       run: cd docker && ./run_tests.sh ${{ matrix.linux_os }}

  build-windows:
    # The type of runner that the job will run on
    name: "Windows Latest"
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install MIT kerberos
        run: choco install -y --limit-output mitkerberos --ia=ADDLOCAL=all
        continue-on-error: true # Error 3010 is normal, we only want the headers, so no reboot

      - name: Get MIT Kerberos path
        run: Write-Host "::set-output name=KRB_PATH::$((Get-ItemProperty -Path 'HKLM:\SOFTWARE\MIT\Kerberos\SDK\4.1.0\').PathName)"
        id: mit_kerberos

      - name: Build on windows
        run: npm install
        env:
          GYP_DEFINES: KRB_PATH="${{ steps.mit_kerberos.outputs.KRB_PATH }}"
